#BlueJ class context
comment0.params=
comment0.target=World()
comment0.text=\r\n\ No\ argument\ constructor\ for\ a\ World.\r\n
comment1.params=id\ location\ name\ picture\ width\ height
comment1.target=World(int,\ GridVector,\ java.lang.String,\ java.lang.String,\ int,\ int)
comment1.text=\r\n\ Constructor\ for\ a\ World.\r\n
comment10.params=
comment10.target=World\ clone()
comment10.text=\r\n\ \ This\ is\ the\ clone\ method\ for\ World.\ \ It\ overrides\ the\ clone()\r\n\ \ method\ of\ GameObject,\ and\ is\ meant\ to\ be\ overridden\ where\ needed\ by\r\n\ \ subclass\ methods.\ \r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\r\n\ \ A\ toString\ method\ for\ World\ that\ returns\ the\ name,\ id,\ picture,\ and\r\n\ \ location\ of\ the\ World.\r\n\ \ \r\n\ \ @return\ \:\ String\ with\ information\ on\ the\ name,\ id,\ picture,\ and\ location\ of\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ World\r\n
comment12.params=obj
comment12.target=boolean\ equals(java.lang.Object)
comment12.text=\r\n\ \ An\ equals\ method\ for\ World\ that\ compares\ id,\ name,\ and\ location\ values.\r\n\ \ Name\ should\ ensure\ that\ World\ objects\ of\ differing\ types\ will\ not\ be\ equated\ as\ equal,\r\n\ \ even\ if\ there\ is\ id\ overlap\ between\ subclasses.\r\n\ \ \r\n\ \ @param\ obj\ \:\ the\ object\ for\ comparison\ \r\n\ \ @return\ \ \ \ \:\ a\ boolean\ value\ true\ or\ false\ \r\n
comment13.params=
comment13.target=int\ hashCode()
comment13.text=\r\n\ \ A\ basic\ hashCode\ method\ for\ World,\ for\ the\ id,\ name,\ and\ location\r\n\ \ field\ that\ are\ compared\ in\ the\ equals\ method.\r\n\ \ \r\n\ \ @return\ \:\ an\ integer\ value\r\n
comment2.params=
comment2.target=int\ getWidth()
comment2.text=\r\n\ getWidth\ returns\ the\ integer\ width\ of\ the\ World.\r\n\ \r\n\ @return\ \:\ width\ as\ an\ integer\r\n
comment3.params=width
comment3.target=void\ setWidth(int)
comment3.text=\r\n\ setWidth\ sets\ the\ World's\ width\ integer.\r\n\ \r\n\ @param\ width\ \:\ an\ integer\ representing\ width\r\n
comment4.params=
comment4.target=int\ getHeight()
comment4.text=\r\n\ getHeight\ returns\ the\ integer\ height\ of\ the\ World.\r\n\ \r\n\ @return\ \:\ height\ as\ an\ integer\r\n
comment5.params=height
comment5.target=void\ setHeight(int)
comment5.text=\r\n\ setHeight\ sets\ the\ World's\ height\ integer.\r\n\ \r\n\ @param\ width\ \:\ an\ integer\ representing\ height\r\n
comment6.params=
comment6.target=java.util.HashMap\ getTerrainMap()
comment6.text=\r\n\ getTerrainMap\ returns\ the\ terrain\ HashMap\ of\ the\ World.\r\n\ \r\n\ @return\ \:\ terrainMap\ as\ a\ HashMap\r\n
comment7.params=terrainMap
comment7.target=void\ setTerrainMap(java.util.HashMap)
comment7.text=\r\n\ setTerrainMAp\ sets\ the\ World's\ terrain\ HashMap.\r\n\ \r\n\ @param\ terrainMap\ \:\ a\ HashMap\ of\ Terrain\ keyed\ by\ an\ id\ integer,\ representing\ a\ terrain\ map\r\n
comment8.params=loc\ terrain
comment8.target=void\ addTerrain(java.lang.Integer,\ Terrain)
comment8.text=\r\n\ addTerrain\ adds\ Terrain\ to\ the\ World's\ terrain\ HashMap.\ \ It\ overwrites\ any\ current\r\n\ terrain\ in\ that\ position.\r\n\ \r\n\ @param\ loc\ \:\ an\ integer\ location\r\n\ @param\ terrain\ \:\ a\ Terrain\ object\r\n
comment9.params=id1\ id2
comment9.target=void\ switchTerrain(java.lang.Integer,\ java.lang.Integer)
comment9.text=\r\n\ switchTerrain\ switches\ the\ position\ of\ two\ pieces\ of\ Terrain\ in\ the\ World's\r\n\ terrain\ HashMap.\r\n\ \r\n\ @param\ vector1\ \:\ a\ GridVector\r\n\ @param\ vector2\ \:\ a\ GridVector\r\n
numComments=14
